@mixin clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}

@mixin link ($normal, $visit, $hover, $active) {
  & {
    color: $normal;
    &:visited {
      color: $visit;
    }
    &:hover {
      color: $hover;   
    }
    &:active {
      color: $active;
    }
  }
}


@mixin list-clear() {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

@mixin placeholder($color:  #000, $font-weight:normal, $text-transform: none) {
  ::-moz-placeholder {
    color: $color;
    font-weight: $font-weight;
    text-transform: $text-transform;
    opacity: 1; // See https://github.com/twbs/bootstrap/pull/11526
  }
  :-ms-input-placeholder {
    color: $color;
    font-weight: $font-weight;
    text-transform: $text-transform;
  }
  ::-webkit-input-placeholder {
    color: $color;
    font-weight: $font-weight;
    text-transform: $text-transform;
  }
}

@mixin text-overflow {
	overflow: hidden;
	-ms-text-overflow: ellipsis;
	text-overflow: ellipsis;
	white-space: nowrap;
}

@mixin cover {
	background-repeat: no-repeat;
	background-size: cover;
	background-position: 50% 50%;
}

@mixin background-gradient($startColor: #3C3C3C, $endColor: #999999) {
    background-color: $startColor;
    background-image: linear-gradient(top, $startColor, $endColor);
}

@mixin background-horizontal($startColor: #3C3C3C, $endColor: #999999) {
    background-color: $startColor;
    background-image: linear-gradient(left, $startColor, $endColor);
}

@mixin background-radial($startColor: #FFFFFF, $startPos: 0%, $endColor: #000000, $endPos:100%) {
    background: radial-gradient(ellipse at center, $startColor $startPos,$endColor $endPos);
}

@mixin background-opacity($color: #000, $opacity: 0.85) {
  background: $color;
  background: rgba($color, $opacity);
}


@mixin border-radius-separate($topLeftRadius: 5px, $topRightRadius: 5px, $bottomLeftRadius: 5px, $bottomRightRadius: 5px) {
  border-top-left-radius:     $topLeftRadius;
  border-top-right-radius:    $topRightRadius;
  border-bottom-right-radius: $bottomRightRadius;
  border-bottom-left-radius:  $bottomLeftRadius;
}

@mixin box-rgba($r: 60, $g: 3, $b: 12, $opacity: 0.23, $color: #3C3C3C) {
  background-color: transparent;
  background-color: rgba($r, $g, $b, $opacity);
            filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color}',endColorstr='#{$color}');
            zoom:   1;
}

@mixin box-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4), $inset: "") {
  @if ($inset != "") {
   box-shadow: $inset $x $y $blur $color;
  } @else {
   box-shadow: $x $y $blur $color;
  }
}


@mixin double-borders($colorOne: #3C3C3C, $colorTwo: #999999, $radius: 0) {
  border: 1px solid $colorOne;
  box-shadow:0 0 0 1px $colorTwo;
  border-radius: $radius;
}

@mixin font-face($fontFamily: myFont, $eotFileSrc: 'myFont.eot', $woffFileSrc: 'myFont.woff', $ttfFileSrc: 'myFont.ttf', $svgFileSrc: 'myFont.svg', $svgFontID: '#myFont') {
  font-family: $fontFamily;
  src: url($eotFileSrc)  format('eot'),
       url($woffFileSrc) format('woff'),
       url($ttfFileSrc)  format('truetype'),
       url($svgFileSrc + $svgFontID) format('svg');
}

@mixin opacity($opacity: 0.5) {
    $opacityMultiplied: ($opacity * 100);
    opacity: $opacity;
}

@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {
  transform: rotate($deg + deg);
  filter: progid:DXImageTransform.Microsoft.Matrix(
       M11=#{$m11}, M12=#{$m12}, M21=#{$m21}, M22=#{$m22}, sizingMethod='auto expand');
    zoom: 1;
}

@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {
    text-shadow: $x $y $blur $color;
}

@mixin transform($params) {
  transform: $params;
}

@mixin transform-origin($params) {
  transform-origin: $params;
}

@mixin transform-style($style: preserve-3d) {
  transform-style: $style;
}

@mixin transition($properties...) {

  @if length($properties) >= 1 {
    transition: $properties;
  }

  @else {
    transition:all 0.2s ease-in-out 0s;
  }
}

@mixin triple-borders($colorOne: #3C3C3C, $colorTwo: #999999, $colorThree: #000000, $radius: 0) {
    border: 1px solid $colorOne;
    border-radius:$radius;
    box-shadow :0 0 0 1px #{$colorTwo}, 0 0 0 2px #{$colorThree};
}

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

/// Animation
/// @param {*} $str - name duration timing-function delay iteration-count direction fill-mode play-state ([http://www.w3schools.com/cssref/css3_pr_animation.asp](http://www.w3schools.com/cssref/css3_pr_animation.asp))
/// @require {mixin} css3-prefix

@mixin animation($str) {
  @include css3-prefix('animation', $str);
}